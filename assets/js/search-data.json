{
  
    
        "post0": {
            "title": "The Lastest Lectures For Fastai are Online.",
            "content": "What is Fastai? . If you&#39;re not familiar with the list of frameworks and libraries that exist for Deep Learning - or even if you are - then you might not be aware of Fastai. This is both a Deep Learning Framework built on top of Pytorch as well as an online curriculum to quickly become productive using Deep Learning for your own interests. Jeremy is a very solid teacher and I recommend taking the course if you&#39;re interested in learning how this all works. And, I don&#39;t mean that simply because I like the lectures but also because I&#39;ve taken them before and I&#39;ve also built my own simple projects out of the lectures done by him - and Rachel since she&#39;s also assisting with building the course. One really big plus for this course is that you&#39;ll start by actually building a model and using it: in this version it will be Birds vs Forests instead of Cats vs Dogs like used to be. As Jeremy points out in the first lecture, most people don&#39;t learn in an academic way. By that we mean they start with theory and then learn how to interact with the system. Instead, we learn a few basic ideas and then toss ourselves in to apply and learn as we go. . So, What Am I Going to Do? . Lately, I&#39;ve been playing a game called The Cycle: Frontier which is a kind of Extraction Shooter game. What this means is that players are dropped into a semi-persistent server to collect items, kill creatures and even kill other players. Really, it is up to the player to decide how they interact with and play the game. But being a shooter means that there are guns - and since there are guns there are categories of guns. Since fantasy is inspired by the real world in some sense, the question I would like to ask is Knowing Models are Derived from the Real World Weapons, can we build a classifier based on real life weapons that can correctly predict Fantasy Weapons? . This post, like the lectures, is not going to be about how this all works but instead is going to be a simple application and retrospective. That being said, let&#39;s start! We&#39;ll start with the important imports for getting this working. . import os from pathlib import Path from time import sleep from duckduckgo_search import ddg_images # Will write more about this later. from fastdownload import download_url # Will need to explore this more. from fastcore.all import * from fastai.vision.all import * # This is for the CNN learner. from fastai.vision.widgets import * # This is required for the cleaner later. . The first three imports you should hopefully be familiar with. Everything else you should simply grant for now. . # This is a function from the notebook: def search_images(term, max_images=200): return L(ddg_images(term, max_results=max_images)).itemgot(&#39;image&#39;) . urls = search_images(&#39;assult rifle photos&#39;, max_images=1) urls[0] . &#39;http://allhdwallpapers.com/wp-content/uploads/2016/07/Assault-Rifle-5.jpg&#39; . So, we&#39;re going to download an example image using the helper functions so far and make sure its working: . dest = Path(&#39;..&#39;, &#39;__data&#39;, &#39;example-ar-gun.png&#39;) download_url(urls[0], dest, show_progress=False) im = Image.open(dest) im.to_thumb(256,256) . Now let&#39;s check for a DMR and make sure that is sane: . dmrUrls = search_images(&#39;dmr photos&#39;, max_images=1) dest = Path(&#39;..&#39;, &#39;__data&#39;, &#39;example-dmr-gun.png&#39;) download_url(dmrUrls[0], dest, show_progress=False) im = Image.open(dest).to_thumb(256,256) im . So, now we need data from the Internet: . searches = &#39;assault rifle&#39;,&#39;dmr&#39; path = Path(&#39;..&#39;, &#39;__data&#39;, &#39;ar_or_dmr&#39;) for o in searches: dest = (path/o) dest.mkdir(exist_ok=True, parents=True) download_images(dest, urls=search_images(f&#39;{o} photo&#39;)) sleep(10) # Pause between searches to avoid over-loading server and blocking responses resize_images(path/o, max_size=400, dest=path/o) . /usr/lib/python3.10/site-packages/PIL/Image.py:959: UserWarning: Palette images with Transparency expressed in bytes should be converted to RGBA images warnings.warn( . The below just checks to make sure that the downloaded images are in fact images. And, then we&#39;re iterating though the results to remove what are failed images: . failed = verify_images(get_image_files(path)) failed.map(Path.unlink) len(failed) . 4 . We can even check the source code using ?? and see for ourselves that is what it is doing: . ??verify_images . Signature: verify_images(fns) Docstring: Find images in `fns` that can&#39;t be opened Source: def verify_image(fn): &#34;Confirm that `fn` can be opened&#34; try: im = Image.open(fn) im.draft(im.mode, (32,32)) im.load() return True except: return False File: ~/.local/lib/python3.10/site-packages/fastai/vision/utils.py Type: function . DataBlocks are are really good idea which is a lazy wrapper that defines how and what to do with the downloaded images in preparation for use in a model. There is more information at the docs page here where you can check out other ways to use this. For now, we&#39;re following Jeremy&#39;s example and just mostly running the code as is. . dls = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=[Resize(192, method=&#39;squish&#39;)] ).dataloaders(path) dls.show_batch(max_n=12) . Looking over some of htese images, we can already tell that we&#39;re getting images that are not what we&#39;re after. The second image in the top row is some kind radio which is not what we want. Regardless, we&#39;re again going to simply train the model even with that image in there since we&#39;re following Jeremy&#39;s advice and just going to train the model and we&#39;ll deal with the strange Radio later. . learn = vision_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(7) . epoch train_loss valid_loss error_rate time . 0 | 1.135293 | 1.895362 | 0.333333 | 00:01 | . epoch train_loss valid_loss error_rate time . 0 | 0.783494 | 1.115906 | 0.250000 | 00:01 | . 1 | 0.578771 | 0.935797 | 0.222222 | 00:01 | . 2 | 0.455172 | 0.774320 | 0.263889 | 00:01 | . 3 | 0.365537 | 0.762151 | 0.263889 | 00:01 | . 4 | 0.311685 | 0.737330 | 0.277778 | 00:01 | . 5 | 0.263628 | 0.734078 | 0.277778 | 00:01 | . 6 | 0.224883 | 0.718644 | 0.291667 | 00:01 | . So, this is what training will look like. The highlights are that training was very fast but - compared to many other models trained, including Jeremy&#39;s - this one is doing pretty terrible for a Deep Learning model. The validation loss is worse than random chance which means there are very serious problems with either out Deep Learning Architecture or the data. And, the architecture is definitely not the problem so it&#39;s the data. . is_ar,_,probs = learn.predict(PILImage.create(Path(&#39;__data&#39;, &#39;example-dmr-gun.png&#39;))) print(f&quot;This is a(n): {is_ar}.&quot;) print(f&quot;Probability it&#39;s an Assult Rifle: {probs[0]:.4f}&quot;) . This is a(n): assault rifle. Probability it&#39;s an Assult Rifle: 0.9858 . im = Image.open(Path(&#39;__data&#39;, &#39;example-dmr-gun.png&#39;)).to_thumb(512,512) im . Big Oof. That&#39;s not an Assault Rifle. . Time to do some data cleaning. Thankfully, the Fastai library comes with a very useful function which takes the images from the data, checks what their loss is and then presents them to us so that we can remove or re-label them. Make sure you don&#39;t make the same mistake as I did and correct import the widgets: from fastai.vision.widgets import * . cleaner = ImageClassifierCleaner(learn) cleaner . Don&#39;t forget once you&#39;ve actually ran and collected what changes you want made, you&#39;ll need actually run the below code to actually make those corrections: . for idx in cleaner.delete(): cleaner.fns[idx].unlink() for idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat) . While trying to train this, I found that I was having issues unless I re-built the Data Loader so that&#39;s what we&#39;re doing here: . dls = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=[Resize(192, method=&#39;squish&#39;)] ).dataloaders(path) dls.show_batch(max_n=12) . Got some weird stuff again. Looks like some bikes as well as some other equipment that I don&#39;t know. That would imply that using dmr is a bad search term for what we&#39;re after. We&#39;ll do one more training attempt to see how much harm those are doing and then we&#39;ll consider correcting the search terms. . learn = vision_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(7) . epoch train_loss valid_loss error_rate time . 0 | 1.281920 | 1.533394 | 0.413333 | 00:02 | . epoch train_loss valid_loss error_rate time . 0 | 0.869596 | 0.949424 | 0.306667 | 00:02 | . 1 | 0.667905 | 0.852354 | 0.266667 | 00:02 | . 2 | 0.529514 | 0.767100 | 0.213333 | 00:02 | . 3 | 0.418889 | 0.783195 | 0.213333 | 00:01 | . 4 | 0.338373 | 0.754332 | 0.226667 | 00:02 | . 5 | 0.277043 | 0.730826 | 0.226667 | 00:02 | . 6 | 0.237752 | 0.718148 | 0.226667 | 00:02 | . Looks like our validation loss is still struggling so it&#39;s time to update our search term from dmr to designated marksmen rifle. Speedrun time! . searches = &#39;assault rifle&#39;,&#39;designated marksmen rifle&#39; path = Path(&#39;..&#39;, &#39;__data&#39;, &#39;ar_or_dmr_v2&#39;) for o in searches: dest = (path/o) dest.mkdir(exist_ok=True, parents=True) download_images(dest, urls=search_images(f&#39;{o} photo&#39;)) sleep(10) # Pause between searches to avoid over-loading server resize_images(path/o, max_size=600, dest=path/o) failed = verify_images(get_image_files(path)) failed.map(Path.unlink) . (#7) [None,None,None,None,None,None,None] . dls = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=[Resize(192, method=&#39;squish&#39;)] ).dataloaders(path) dls.show_batch(max_n=12) . learn = vision_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(7) . epoch train_loss valid_loss error_rate time . 0 | 1.279173 | 0.758920 | 0.247312 | 00:02 | . epoch train_loss valid_loss error_rate time . 0 | 0.725494 | 0.552330 | 0.215054 | 00:02 | . 1 | 0.572957 | 0.452633 | 0.161290 | 00:02 | . 2 | 0.429993 | 0.460270 | 0.172043 | 00:02 | . 3 | 0.329015 | 0.517723 | 0.215054 | 00:02 | . 4 | 0.260919 | 0.542659 | 0.215054 | 00:02 | . 5 | 0.212036 | 0.543762 | 0.204301 | 00:02 | . 6 | 0.176182 | 0.541302 | 0.215054 | 00:02 | . cleaner = ImageClassifierCleaner(learn) cleaner . for idx in cleaner.delete(): cleaner.fns[idx].unlink() . for idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat) . dls = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=[Resize(192, method=&#39;squish&#39;)] ).dataloaders(path) dls.show_batch(max_n=12) . learn = vision_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(7) . epoch train_loss valid_loss error_rate time . 0 | 1.303078 | 1.055721 | 0.304348 | 00:02 | . epoch train_loss valid_loss error_rate time . 0 | 0.759311 | 0.487650 | 0.250000 | 00:02 | . 1 | 0.568219 | 0.461627 | 0.184783 | 00:02 | . 2 | 0.444043 | 0.539364 | 0.163043 | 00:02 | . 3 | 0.340317 | 0.588352 | 0.141304 | 00:02 | . 4 | 0.269084 | 0.642941 | 0.152174 | 00:02 | . 5 | 0.217371 | 0.619099 | 0.152174 | 00:02 | . 6 | 0.183307 | 0.610297 | 0.163043 | 00:02 | . is_ar,_,probs = learn.predict(PILImage.create(Path(&#39;..&#39;, &#39;__data&#39;, &#39;example-dmr-gun.png&#39;))) print(f&quot;This is a(n): {is_ar}.&quot;) print(f&quot;Probability it&#39;s an Assult Rifle: {probs[0]:.4f}&quot;) . This is a(n): designated marksmen rifle. Probability it&#39;s an Assult Rifle: 0.0029 . That is much better than what we were getting. Now for the real test: Can the model tell the difference between an Assult Rifle and a DMR from the game&#39;s wiki. . for image in [PILImage.create(Path(&#39;..&#39;, &#39;__data&#39;, &#39;cycle-dmr-gun.png&#39;)), PILImage.create(Path(&#39;..&#39;, &#39;__data&#39;, &#39;cycle-ar-gun.png&#39;))]: plt.figure() plt.imshow(image) . is_ar,_,probs = learn.predict(PILImage.create(Path(&#39;..&#39;, &#39;__data&#39;, &#39;cycle-dmr-gun.png&#39;))) print(f&quot;This is a(n): {is_ar}.&quot;) print(f&quot;Probability it&#39;s an Assult Rifle: {probs[0]:.4f}&quot;) . This is a(n): assault rifle. Probability it&#39;s an Assult Rifle: 0.9968 . is_ar,_,probs = learn.predict(PILImage.create(Path(&#39;..&#39;, &#39;__data&#39;, &#39;cycle-ar-gun.png&#39;))) print(f&quot;This is a(n): {is_ar}.&quot;) print(f&quot;Probability it&#39;s an Assult Rifle: {probs[0]:.4f}&quot;) . This is a(n): assault rifle. Probability it&#39;s an Assult Rifle: 0.9805 . Looking like either I don&#39;t have enough data or I don&#39;t know enough about the domain because it is struggling to figure it out. . Addendum . DMR also stands for Digital Mobile Radio which is why we were getting all those weird results earlier in the post. .",
            "url": "https://orgulo.us/machine%20learning/deep%20learning/fastai/lectures/lecture/lecture%201/2022/09/08/Reviewing-Fastai-2022-Coursework-TheBeginning.html",
            "relUrl": "/machine%20learning/deep%20learning/fastai/lectures/lecture/lecture%201/2022/09/08/Reviewing-Fastai-2022-Coursework-TheBeginning.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Game Review: Pawnbarian",
            "content": "What is Pawnbarian? . A friend of mine recommended that I check this game out as he’d stumbled across it somewhere, somehow. Pawnbarian is what looks to be the first published game by j4nw and it’s a good start. There was an earlier iteration of the game on their itch.io page if you go lookikng for it to try out. Checking out the store page, the game presents itself well and is instantly recognizable since it’s a chess board with unique avatars of somekind for your piece and the enemies. The aesthetic is clean and simple which doesn’t distract while playing the game: . Gameplay? . The game is simple to undertand too - even if you’ve never been good at chess. You play as an Avatar - the starter is, of course, the Pawnbarian - which comes with usually a single gimmick and a different deck of moves. The Deck of Moves is how you move around the board to kill the enemy tokens - and they’re simply cards with different chess pieces which limit how you move. For example, the pawn moves like the pawn does in chess; the rook moves like the rook and so on. Your moves for the turn are drawn from this deck and you can see both the remaining moves as well as what was discarded so you have some idea of what could happen next round as the cards get pulled. You’re not limited by time since once the all the cards are drawn then they are simply put back and you get access to all of them again. . As mentioned, your avatar has a gimmick and the Pawnbarians is that when he plays a card with the Cantrip - the lightning symbol - then he gets to move again. And, you can chain these the more you play them to take as many moves as possible. When the cantrip is played then it also draws another card for you to play so you’re never limited by the cards in the deck. At the end of each round, you can use the gold earned by winning the round to add more abilities to your cards. The cantrip is not the only gimmick to add to cards; you can also add diagonal attack or a horizontal attack which will not only harm the square you land on but allow you to hit multiple enemy tokens. There more as well but we’ll limit the discussion to just those as they get the point across. . Enemies also have their own gimmicks, such as the Nimble attribute in the screenshot above, which constrains you simply stomping all over the enemy tokens. There are three dungeons with different enemies and different gimmicks to hinder you in your progress in the dungeons. I do wish there were more than the three dungeons since I stomped most of them much faster than I hoped. That isn’t to say some levels are not a challenge; the Void Grasp afflicted boss of Dungeons three was a frustrating challenge to beat but that’s why we play the game. What is not lacking is the list of different avatars you can play; there are 6 of them with their own ways to play the boards. . If you like Rouge-lights and Chess then you’ll end up enjoying turning this game on when you’re looking for a break from either Chess or Rouge-lights. .",
            "url": "https://orgulo.us/games/review/indie/chess/2022/09/08/Game-Review-Pawnbarion.html",
            "relUrl": "/games/review/indie/chess/2022/09/08/Game-Review-Pawnbarion.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "How to Setup V Rising on Linux",
            "content": "The Quick Version: . If you’re here becuase you just want the answer then here are the exact steps that always work for me. . Download the V Rising Dedicted Server from steam to your account. | Download Proton Experimental and change to the Bleeding Edge Beta branch. | Run this command: STEAM_COMPAT_CLIENT_INSTALL_PATH=/tmp STEAM_COMPAT_DATA_PATH=/tmp &lt;Path/to/proton/experimental/install/location/proton&gt; run VRisingServer.exe &lt;args-from-offical-repo&gt; . If this doesn’t work then proceed to the below: | . | Download Lutris and install the dependecies it asks for. | Find and install the Epic Games laucher from Lutris. | Do the steps it asks you to run through: including those dependencies. | Reboot. | Run the command: STEAM_COMPAT_CLIENT_INSTALL_PATH=/tmp STEAM_COMPAT_DATA_PATH=/tmp &lt;Path/to/proton/experimental/install/location/proton&gt; run VRisingServer.exe &lt;args-from-offical-repo&gt; . | Story Time . I have been looking forward to playing this game since I accidently found it a while back. As someone who’s favorite genre is definitely Survival Games and Vampires are one of my favorite supernatural creatures, this game was going to be at the top of the list. Adding to that the skills along with skillshots for combat and this is about as perfect as it gets. Sadly, the game does not support linux and - per the Protondb page - most people were simply not able to get the game running. End of Story. . But in actuality, after a few days of work and some investigation by the wonderful Proton Community they found that it was missing some configuration files and they were taken from another game the developer had released. Once you copied those into the proper place then the game could launch. Luckily, Proton is very active and soon this change was pushed into the the Bleeding Edge Beta of Proton and once swapped over the game would run without issues. I also confirmed this myself and happily booted the game into my first test world! End of Story. . So, What About the Dedicated? . So, the problem is that this cannot work for the Dedicated server. Since launching the dedicated server only shows a link to the Instructions to configure the server and it assumes that it is running on a Windows Computer. All we have locally is the simple example .bat file for windows which is of little use to us. What we need to do is run the Dedicated server somehow with Proton and we’ll have to find a way to put this into a script. . How Do We Run Something Manaully With Proton? . Luckily, just like the wonder people over at the Github Page, we can find that answer online! According to this old thread from Reddit: . STEAM_COMPAT_DATA_PATH=~/.proton/ ~/.steam/steam/steamapps/common/Proton 3.7/proton run whatever.exe You need to create ~/.proton (it can be any directory and can be empty) . Excellent! Now we have something to work with. Looking at the command I built, I simply put those in /tmp since I didn’t want to think about what compatdata is; I still don’t really know what this is after a quick Google but it works like this. So, simply create a little script to be ran in bash: . #!/usr/bin/bash STEAM_COMPAT_CLIENT_INSTALL_PATH=/tmp STEAM_COMPAT_DATA_PATH=/tmp &lt;Path/to/proton/experimental/install/location/proton&gt; run VRisingServer.exe &lt;args-from-offical-repo&gt; . … and then chmod +x scriptName.sh and run it to start the server. . This Didn’t Work! . So, in my own troubleshooting I found that I ended up with an error Failed to create batch mode window: Success. when I ran this a second time on my server. However, after doing some testing on multiple different distributions - Ubuntu 20.10, EndevourOS, Manajaro - I found that it didn’t work on any of my systems even though it had ran once. Adding to my confusion, the dedicated server ran find on my own Desktop and without issues at all. Considering one of my servers was Manjaro just like my desktop then there must be something installed on locally which is not being installed along with the Steam Proton Dependencies. The only noticable difference in dependencies was that I have Lutris Installed on my own Destktop and it’s not on any of my other systems. So, I ran through exacty what is installed via Lutris and once I rebooted my other server it worked without issues. . So, What Is Missing? . The honest answer is that I don’t know. The list of dependences that gets installed along with the process is quite a list and I simply don’t have time to isolate which ones are the correct packages. If you have the time to figure it out then please let me know so I can update this post. Otherwise, Happy Hunting! .",
            "url": "https://orgulo.us/dedicated/gaming/v%20rising/linux/instructions/2022/06/01/how-to-setup-a-dedicated-v-rising-server-on-linux.html",
            "relUrl": "/dedicated/gaming/v%20rising/linux/instructions/2022/06/01/how-to-setup-a-dedicated-v-rising-server-on-linux.html",
            "date": " • Jun 1, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "How Do You Create a Normal Map?",
            "content": "How We Got Here . Looking around the Internet, it ended up being much harder to find the information about how to make a Custom Normal Map then I though it should be. After finally figuring this out, I thought I’d formalize/share it here so that it doesn’t get lost among everything else. . Where We’re Going . We’ll go over the how to do this with a simple example: dirt. First you’ll want to start blender up and clear the scene. Drop in a new plane and make it whatever size you like; I scaled it by 2x so if you’re trying to just copy my examples then simply do that. Since we’re just working on making a material to import into a game, we don’t really need anything else. So, we’re moving on to making the texture: . Again, this is just a basic example so we’ll create something like this: Not bad, not complicated but will show us the effect we’re after; feel free to copy the settings if you’re following along. Now add an Image Texture Node to the graph but don’t attach it to anything: . Create a new image and call it what your target material is about. In my case, I’m just making dirt so we’re calling it BasicDirt: Now we’re going to do something called Baking. So, what is Baking actually? What we’re doing is saving information to the texture so that it doesn’t have to be re-calculated. Eevee - the default engine in blender - doesn’t support baking so you’ll need to switch over to Cycles for this to work. Once that is done then go ahead and click Bake and it should work! You should now see the image show up in the Image Editor in the UI. You’ll want to save this to an acutal file for use in the Game Engine - or for other uses like making a normal map for it. . The Next Stop . Ok, now that you have the texture go ahead and pull this into your photo editing software. I’m going to do this with Gimp so to follow along you’re going to need it. Otherwise, you should just be able to look up “Making a Normal Map in Photoshop” and it should be a simple option. I spent quite a bit of time trying to make the Normal Map in Blender and I couldn’t get it working; if someone did figure this out then please let me know. But until then, you’ll want pull your image into Gimp first. Once that is done, you’ll select Filters &gt; Generic &gt; Normal Maps. and it will present you with the ability to set how harsh the effect is: … and that scale is not the default. Go ahead and play around with that number to get the effect you want. Depending on your Game Engine, save it with the proper nomenclature for when you pull it in. . Get your Blender project back open and hop into the Shading Pane once more. Add a new Image Texture Node and insert the new Normal map you created. Once added the image into the Image Texture Node, you’ll want to switch over to non-color: . And, that’s how you Make a Normal Map, and add it into blender. You can improve it some using other options like adding a Bump Node between it. .",
            "url": "https://orgulo.us/gimp/blender/baking/normal/map/game/2022/02/02/How-To-Make-Matching-Textures-And-Normals.html",
            "relUrl": "/gimp/blender/baking/normal/map/game/2022/02/02/How-To-Make-Matching-Textures-And-Normals.html",
            "date": " • Feb 2, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Game Review: Eraser",
            "content": ". Throw your stick-figure-self at cannonballs and airplanes in an upward pursuit of the eraser! Play cooperatively online to share the journey! Who’s to say whether the company will help or hinder, though… . Recently, I was looking for some simple and free games to enjoy and ran across this little gem. Eraser by Ringating feels like playing a Platformer from the 90s but with the Visuals and Game Design philosophy of now. Let me explain. . First off, there is no such thing as death in this game. You simply cannot die and there is no real punishment for making a mistake. The worst that happens is that you have to start all over or fall a little ways down and have to regain ground again. You might be thinking they’re the same because if you died in platformers from before then you’d also have to start all over; They all had a checkpoint system where if you had lives and you died then you could start from the checkpoint again. Games like Spyro have the faeries which record your position after all. But, this game has no hard Start Over Because You Died like those games do. Sure, you could incidentilly fall all the way down - I certainly did more times than I’d like to admit - but there is no hard lose condition. You keep playing as long as you’re willing to and sometimes you fall and have to start part of it again. Somewhere along the way, the levels make it harder to fall to to the beginning so there isn’t even really a checkpoint system as much as the design makes it harder to return to the beginning. . The game itself is just smooth to play. The musical theme of simple classical fits nicely with the theme of the game of being a simple stick figure in a simple world full of simple enemies and obstacles. I’d definitely recommend picking it up and playing it for a few minutes when you don’t have a lot of time to commit to something else - and it’s free on Steam! .",
            "url": "https://orgulo.us/game%20review/game%20design/platformer/free/2022/01/06/Game-Review-How-I-Lost-My-Eraser.html",
            "relUrl": "/game%20review/game%20design/platformer/free/2022/01/06/Game-Review-How-I-Lost-My-Eraser.html",
            "date": " • Jan 6, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Review of 2021 - Challenges, Thoughts",
            "content": "How did the challenges go? . The honest truth is that I what I wanted to get done this year was pretty fluid and I did not get many of the commits done. Looking at what I have been working on though - and what I ended up spending my time on - I didn’t do so bad this year. . Firstly, I finally got a macro workflow that is working for pushing my projects forward along with learning new topics. One of the problems which I have been struggling with is how to both learn enough new concepts and frameworks along with actually using them. The normal process being used it to . Find something of interest. | See what’s been made in it. | Work on tutorials, docs for the framework/tool/information. | Try to apply it to pet projects. | Maybe use it in a real project. | This process has problems that I needed solved. Since I have my hands in multiple different places - Data Science, Linux, Programming, Web Design, Secret Project I can’t discuss yet, etc - then this simply doesn’t work. With my life growing in so many dimensions, I simply cannot sit down and follow this process for a single framework and then maybe add it to what I am working on. If it takes a month or two to apply and become comfortable with the framework then it’s too slow and the other aspects of my life will end up neglected. So, what do I do now? . I have split the months of the year up into four quarters - just like a a business calendar. Then, the first month of that quarter is a Learning Month which means I review what I need to learn, allocate out a set of classes for the month and then do power through them in that month. I take notes about what I’m learning and for some parts will actually practice with a very small pet project which is meant to implement a single thing. After that month is over, the next two months are Apply Months which means that I take everything that I learned in that month, review it, and then start adding it to my projects. . This allows me to schedule up to four of classes covering any material I might need coming up in the next few months. This is also better because it keeps learning and application separate. When my schedule was fluid I kept finding ways to not work on projects since I constantly fell back into learning about new frameworks and tools. Now, the clear separation is allowing me to be strict about when and what tasks are supposed to be done. It is already paying out dividends – even though the first attempt at it I was sick for most of the first month of Apply. . Read 100 Books . Of all the challenges that I wanted to complete, this is the one. And, I did worse than last year too: 81 books last year vs 31 books this year. Looking over how my life has changed since the Pandemic started, I think the biggest reason is that much of my reading was done in between. If I was waiting in line at a store then I was reading; while walking from the parking garage at work into the office I was reading. Now that we’re remote only and there are no lines when I am out running errands, I just don’t really read books as much as I used to. I do listen to them while walking around stores but often I don’t count those in the totals; I finished all of the Dragonlance Chronicles books via Audible for example and they’re not filled out on Goodreads. This means setting up time at home to read and I’m always working on projects or doing chores or watching lecture videos. That really only leaves downtime at work to read and we’ve been relatively busy lately. And, I happen to also have projects for Datto that I work on so that’s not really in the cards either. I’ll have a separate post to what the Challenges of 2022 are going to be so strategies will be discussed in that post. . Create Three Potential Streams of Income . For this one, I was successful. Currently, I have two streams of income: one active (Datto) and one semi-passive (Crypto) to work with. I am making money in both of those realms at this point which was more than I had set for the goal. The goal was to identify three potential streams of income that I could have for the year and there was no shortage of ideas for this one. I’ll discuss some of my favorites in the real Challenges of 2022 post but there are plenty more than three, . New Job Title . This is was a failed challenge. After exploring and talking with lots of people, this is going to be the hardest one. And, you’d consider that since I already have so many useful skills that it would be the easiest but it’s simply not. Realistically, I like where I work and I don’t really want to leave any time soon. All the positions that are within reach are jobs that I simply don’t want. And, I am not willing to trade in the job I have for those other jobs since they’d change something fundamental about what I want: working overnights, well limiting interacting with users, flexible time table for my own work. I’ll discuss more details in the Challenges of 2022 post when I write it. . A Blog Post a Month . This is another place that I did decent but did not hold myself too. The biggest factor for this was simply not setting aside the time for it. It’s lower on the list of priorities which need to get done so I simply didn’t schedule out the time. Along side that was anything I wanted to write about I didn’t feel either qualified to write about or didn’t feel what I was willing to write would be be long or interesting enough to justify the post. This is a mindset problem which I should be able to easily solve in the coming year. Especially after looking at what the average person on Medium is writing about; they’re not even trying to write quality content most of the time but instead are simply writing very short not-even-tutorial posts about how to use a framework. There is also a surprising amount of “X Ideas fro Passive Income” posts which are mostly all the same thing over and over. I can do better than that. . Draw an Original Comic . I dropped this one entirely – and I’m dropping it for next year too. I have a list of Daily Tasks which include things like exercise, typing practice along with drawing practice and by far the task I skip the most is drawing. I need to change this so I can actually start drawing at an ok level. Right now, I am struggling with curved lines and that’s quite basic for this level of challenge. I have a few ideas – when don’t I? - but this is a long road which I need to build basic habits out before even trying some kind of real challenge like a Comic. .",
            "url": "https://orgulo.us/projects/challenges/future/2021/12/08/Review-Of-2021-Challenges.html",
            "relUrl": "/projects/challenges/future/2021/12/08/Review-Of-2021-Challenges.html",
            "date": " • Dec 8, 2021"
        }
        
    
  
    
        ,"post6": {
            "title": "Challenges for The Year: 2022 Edition",
            "content": "Read 50 Books . I’m lowering the number back to 50 books even though 100 books is still the larger goal. The real reason is I need to find a way to fit reading back into my schedule. With so many projects, I will be shifting to audiobooks which is depressing since I read faster than I can process audiobooks. I do have a trick for this: listen to ebooks via the Kindle Store in a Web Browser. This is probably a good enough place to explain how this works. . Install an extension for your Web Browswer which does Text-To-Speech - such as Read Aloud. Honestly, finding a quaility Text-to-Speech reader and paying for the extension is a better idea than free; the lack of intonation from the extension I am using makes listening much harder. Concentrating is harder compared to a professionally done book from Audible. Go to Your Online Kindle Library and find a book to listen to. Open the book up and then hit the play button inside your Text-To-Speech extension. You will need to adjust the speed, voice, volume and location when you hit play per new book for tuning. But, this is a good way to fit more average fiction reading into your day. . Putting this in the background of the first half of my work shift sounds correct. Since I am not usually interacting with people then it should be an easy way to get 2-3 hours of “reading” done each day. Let the challenge begin. . Have Three Streams of Income . We’re moving from planning to application with this one. . Primary “9-5” Job. . Obviously, my job is the primary source of income - and I have no real interest in changing that. Working Technicaly Support is usually an awful experience since you’re dealing with End Users which have no real understanding of technology nor how their behaviors make little sense. However, where I work I am dealing with people that at least have some background in technology so having conversations with them is usually much less painful than End Users. Since my role is also on Overnights, this significantly limits the interactions with the kinds of people who constantly cause problems for themselves - and therefore me. . Streaming . I’m going to take a serious attempt at making money on Content Creation sites like Youtube, Twitch and TikTok. The competition here is enormous and this is not the kind of job I admit I’m naturally good at but it fits well into my life. I play games with my friends and coworkers consistenly enough that these can be put online without too much trouble. Getting people to watch or care about the content is a totally different problem. Doing the research that I have so far, we’re really going to have to lean on Personality quite a bit otherwise this simply wont work. Due to being on Linux, there really is nothing but Splitgate which I can play competitively and stream. And looking at the numbers, Splitgate is struggling both as a streamed game as well as keeping an audiance of players: . So, maybe I could try and niche with Splitgate but I would be concerned with getting locked into playing a game struggling to grow. To start though, I will need: . To become Affiliate on Twitch. | Get better at tags on Youtube. | To start posting shorts to Tik Tok. | Web Design . This is the least fun option but I’m capable of this. I have found a set of frameworks and a niche that I can work in without getting too far dragged into the larger frameworks: Single Page Websites. As I expand my ability to use tools such as Blender, Inkscape then I can push into more artistic and aesthetic styles instead of the more normal Single Page Sites. Not much else to say aside from if this works out then expect a Portfolio coming soon. . Logo Design . Between slowly expanding Blender skills and working on my drawing skills, this would be something fun that I could doodle designs and then try to sell to others. There is quite a bit about communicating concepts artistically along with a good amount of Color Theory to learn before I can do this. . New Job Title . This year is the real year that matters though for my job; I have a patent pending for the company and this should be year I get the nay/yay for whether it goes through. No matter how that goes, I’m pushing for an Analytics Job either inside or outside the company. I am familiar enough and competent enough to be doing this as a real job and I am well bored of doing Technical Support. It also is not a real future for me; there is no where to go that I want to be. So, if by six months in I don’t see any progress here then I’m going to start applying for part time Analytics jobs to build experience and push into a new career. . 36 Blog Posts For the Year. . I have been spending a good amount of time reading Medium posts and articles by others this year. And, my expectations are far too high and totally unnecessary. While in college, I learned about one of the books that significanly changed my expecations about writing: The Elements of Style by Strunk and White. The book emphasis is always on Omit Needless Words and I extended that to all of my writing since then: write only what needs to be said. While a good guide, this is now preventing me from writing at all. If someone else has said it then I am not writing about it; if someone hasn’t written about it then I am not confident in writing about it. I know enough and am learning enough to write content to clarify my thoughts for myself and others. So, three posts per month on anything I feel like: Game Design, Data Science, etc . Make the Secret Project Public . By the end of the year, there will be public posts about this project. Watch for a reveal in the future. .",
            "url": "https://orgulo.us/projects/challenges/future/2021/12/08/Challenges-For-2022.html",
            "relUrl": "/projects/challenges/future/2021/12/08/Challenges-For-2022.html",
            "date": " • Dec 8, 2021"
        }
        
    
  
    
        ,"post7": {
            "title": "Monthly Game Review: Ethereal Estate",
            "content": ". I had quite a bit of fun with this game. While working on a Data Science project to try and make predictions on “What Genre Is this Game Based on it’s Header Image?” I stumbled across this weird little game trying to solve an error. Looking through the sample set of games, Ethereal Estate pops out among all the other DLC headers and who knows what else these other images are supposed to inspire. The game is free and you play as a ghost - along with maybe your friend - to terrorize, ruin and throw everything within reach around: like a proper ghost should! . Anyways, the trailer is simple but hilarious so good work Emergence Studio for getting my attention and pulling me in. Your ghost experience is a shopping list of mayhem courtesy of the designer where you cross all kinds of lines: lighting things on fire, throwing people through windows, ramming things with swords, stuff people in closets, poisoning food, breaking records, bringing your victoms back to murder them again, etc. The game is surprising smooth and simple - and fun. My friend and I found the list a bit unclear while roaming around throwing people through windows; my favorite activity in the whole game. I just hope there are more levels coming since there is only the one and we cleared it without too much trouble. Maybe a more traditional graveyard? .",
            "url": "https://orgulo.us/games/review/sandbox/ethereal/estate/simulation/funny/2021/09/07/game-review-ethereal-estate.html",
            "relUrl": "/games/review/sandbox/ethereal/estate/simulation/funny/2021/09/07/game-review-ethereal-estate.html",
            "date": " • Sep 7, 2021"
        }
        
    
  
    
        ,"post8": {
            "title": "Game Review: The Forest",
            "content": "The Forest is another game in the Survival Genre which tries to use Environmental Storytelling to push a plot. You can play with your friends or you can play alone - which definitely gives you a different experience. Alone - so I’m told - feels a lot lot a horror game where you’ll fear leaving the walls of whatever you’ve built. With friends, it was good fun but definitely doesn’t feel like a horror game: FREE BONES! . We’ll start with the stuff I didn’t like first. Like most survival games there is crafting for shelters, walls, defenses and cooking. Unlike most other survival games that I’ve played, crafting buildings in this one feels pretty pointless. There are about four buildings that actually matter: Drying Rack, Bonfire, Water Collector, Shelter. Anything that produces light barely matters and you have to constantly feed fuel to the fires to get the initial “overburn” to really see in the darkness - or really far at all. . Walls are fun but we built on an island off the coast of the main island so we basically just started building random stuff for fun since our base never got attacked. Which is real unfortunate because this game has one of the best building systems I’ve ever played with. The buildings are cumulative so you can build what is basically a blueprint that your friends can collectively dump resources into. And, everyone can see them and since there is a visual blueprint you can actually lay out your base “Blueprint” in full for discussion. What a great idea! . Since it’s Environmental Storytelling, you can basically skip all of it until the end while murdering everything along the way. This is what happened to us - we ended up running into the caves to wipe out the natives and just kind of picked up whatever we found - on our way to kill more of the natives. This isn’t really the game’s fault but more the way we played so beware of missing stuff until the end when you have no choice but to address the story that you don’t really understand. . The combat is surprisingly fun and one the better Combat systems in a Survival Game. Ranged weapons are not broken and do not nullify enemies into a shooting range and melee feels really good with trading blows with the Cannibals. This isn’t really due to the system being complicated but much more about how well done the animations and the interactions with the Natives themselves: they flee, they try to kind of spook and intimidate you, they call their friends. Enemy and animal variety was pretty good and you get introduced to newer enemies at the right times - at least for us. Learn how to block; you’re going to need it. . I mentioned the Night above but it’s really a positive: when it’s dark it is fucking dark. Wandering around at night can get you lost really fast. Everything moving around you - leaves, trees, animals - will making you constantly on edge thinking about if you’re about to get attacked in the dark. Following enemies in the dark is just hard so you wont know how many there are nor where they ran of to. Running around in the Forest really does feel like moving around in the woods stumbling onto deer and opposing murderhobos while you try and find a stable water supply. . A few annoyances around multiplayer we ran into where one time we died and my friend had to afk to do something else. And, I got stuck in the plane behind him for a full hour - not game time, real life time - since it was impossible to actually get around him to play the game. . Another is that the server doesn’t actually save the state. You must save your own character at shelters otherwise you lose progress. This makes absolutely no sense at all when we’re playing on a server being hosted by someone else. You will lose progress if you don’t personally constantly save. . Another was that since we were all doing our own tasks and split up often, some of us didn’t end up having all the tools necessary to get to the end of the game. As a five-man group, one of us got stuck behind because of this while we basically tried to finish the game. If you do this then the bad news is that you all have to vote at the end otherwise you can’t finish the game. We ended up just watching the endings on Youtube after doing all the work to get to the end. . Also, game works in Linux completely in Proton 6.3-4. .",
            "url": "https://orgulo.us/games/review/survival/2021/05/18/Game-Review-The-Forest.html",
            "relUrl": "/games/review/survival/2021/05/18/Game-Review-The-Forest.html",
            "date": " • May 18, 2021"
        }
        
    
  
    
        ,"post9": {
            "title": "Credit Card Security",
            "content": "How Secure is a Credit Card? . Everyone is worried about having their credit card information stolen at some point. We all trust the banks to ensure nobody can just guess our number and submit orders in our name. But, did you know math is the secret behind your security? There are four main issues with stealing a credit card: . Getting the Credit Card Number | Getting the Security Code | Getting the Expiration Date | Getting your Personal Details | Getting the Credit Card Number . There are a total of 10000000000000000 total numbers that can exist for a credit card number. The odds, therefore, to get your number is 1:10000000000000000. But, it’s worse than that because the entire collection of numbers are not used to generate credit cards. In fact, credit cards can pass or fail passed on something called Luhn’s Algorithm This algorithm is used to create what is called a subgroup inside of the total number of cards. We don’t want criminals to just guess numbers and accidentally hit anyone. This is formula is a first line of defense to ensure fake numbers cannot be submitted. . ALGORITHM_CONSTANT = 9 def confirmLuhn(number): #==== Luhn&#39;s Algo ========================== count = 0 # Sum all numbers excluding the last number. sum = 0 # For every other number, square it. # Compare the last digit of the CC number for digit in number: # against the last digit of the sum. num = int(digit) if count == 15: # If final digit, return (sum *ALGORITHM_CONSTANT %10 == num) # compare final digits. elif count % 2 == 1: # If off number, sum += num*num # square number. count +=1 else: # If not off number, sum += num # just add the number to the sum count += 1 #=========================================== outfile = open(&quot;CCNumbers.txt&quot;, &#39;w&#39;) # File opening, obviously. # First we generate the number space that we&#39;re testing. for x in range(0, 0000000000000100): # The real CC number space is actually [0, 9999999999999999], but that&#39;s too much. xString = &quot;%.16d&quot; % x # This is probably lazy design, but I want to fill out the space of numbers and keep the 0&#39;s if confirmLuhn(xString): outfile.write(xString+&quot;n&quot;) # If it&#39;s one of them, then write the result to the file. outfile.close() # BILLIONS OF YEARS OF WORK AND YOU FORGOT TO CLOSE THE STORAGE FILE IN THE CODE?!? . I wrote a basic CC number finder that uses a very small space of numbers to check against as existing numbers - and, you can find it herefor those wishing to pull it and build on it. . Getting the Security Code . The probability of getting the 3 digit number on the back of that card is 1:1000. That might not seem like a lot, and it’s not, but without that number you can’t use the card online. And, most banks will lock your card after a few failed tries. If I can see and memorize the 16 digit Credit Card number from seeing once - this isn’t all that hard, it just takes a bit of practice - this 1:1000 probability is what keeps them from using it online without your consent. . Let’s assume that I did memorize your number and I’m trying to figure out what that code is. Most banks I know of will lock a hard after 5 failed attempts. That means I have a 5:1000 or 1:200 chance of guessing right before the card number becomes useless. Of course, that’s completely ignoring if I don’t have the number and am just trying to guess everything. Even if I beat the 1:10000000000000000 chance of picking the right number and it passes the Luhn Algorithm then I still need to guess with a 1:1000 chance of getting the right number within each potential number. But, it gets even worse for me. . Getting the Expiration Date . I still have to get past your expiration date. There really is no good way to know the actual probability since banks can use any number of years before the card expires. But, I’ll assume a larger case to overestimate since banks will make the task as hard as possible. Let’s guess that the range of expiration dates is from 2000 - 2030 since some cards are in the wild. We’re looking at a 1:360 chance - which is really tiny when you compare it to other probability spaces. But, we need to think about the entire probability space of 1:10000000000000000 * 1:200 * 1:360 just to find the right card. To select the right card data of just you is 1:720,000,000,000,000,000,000. For comparison, that’s about 6 multiples large than the estimated total of every human being ever alive. . But, what if I memorized all of this information? . Getting your Personal Details . Even after selecting the right credit card with the right security code and the right expiration date you still need to know the precise living address of the person you’re trying to attack to submit orders online. No wonder credit card scammers steal them with skimmers or fake online bank pages! Math wins. .",
            "url": "https://orgulo.us/cysa/security/math/2021/02/20/Luhns-Algorithm-Credit-Card.html",
            "relUrl": "/cysa/security/math/2021/02/20/Luhns-Algorithm-Credit-Card.html",
            "date": " • Feb 20, 2021"
        }
        
    
  
    
        ,"post10": {
            "title": "What is a Memorandum of Understanding?",
            "content": "This post is for the Review and understanding of concepts related to the Comptia Cybersecurity Analyst+ Certificate. . A Memorandum of Understanding primarily serves as a point of negotiation between two or more parties with respect to their intents. The document serves as a way to find common ground along with set expectations about what individual parties are both responsible for and expect from the other party. Special consideration should be paid to whether the document is Legally binding in the legal context it is being used; these are normally not legally binding. It is best thought of as similar to a Gentlemen’s Agreement: “an informal and legally non-binding agreement between two or more parties. It is typically oral, but it may be written or simply understood as part of an unspoken agreement by convention or through mutually-beneficial etiquette”[2]. . Examples . Sample from Violence Against Women Oganization | FormSwift | . Citations: . https://en.wikipedia.org/wiki/Memorandum_of_understanding | https://en.wikipedia.org/wiki/Gentlemen’s_agreement | https://www.investopedia.com/terms/m/mou.asp | https://www.investopedia.com/terms/l/letterofintent.asp |",
            "url": "https://orgulo.us/cysa+/review/2021/02/09/Memorandum-Of-Understanding-Blurb.html",
            "relUrl": "/cysa+/review/2021/02/09/Memorandum-Of-Understanding-Blurb.html",
            "date": " • Feb 9, 2021"
        }
        
    
  
    
        ,"post11": {
            "title": "Quick Introduction to Streamlit",
            "content": "What is Streamlit? . Streamlit is a Framework which is growing in popularity among Python Data Scientists. And the reason for this is rather obvious if you’ve every tried mixing building Web Applications with Data Exporation or Reporting for other people inside your company - or just in general for your projects. . We’re going to build a little Web App with the Iris dataset. And yes, please don’t groan; I am also sick of the Iris dataset but it’s clean and simple and accessible. . So, first we start with actually downloading and it’s just their namesake: . python -m pip install streamlit . Next we’ll import and scaffold off their introduction application: . import streamlit as st # To make things easier later, we&#39;re also importing numpy and pandas for # working with sample data. import numpy as np import pandas as pd st.text(&quot;Hello World&quot;) . … and save that to a file called irisExplore.py. Once that’s done, you’ll run it from the console using streamlit run irisExplore.py: . And there we have our first Web Application. Calling the HTML elements that you want and expect is just that simple. If you want a paragraph then you’ll use st.title(): . st.title(&quot;Turtles Turtles Turtles&quot;) st.subheader(&quot;But, which movie reference is it?&quot;) st.text(&quot;Hello World&quot;) . And, there is even support for Latex too!: . st.title(&quot;Turtles Turtles Turtles&quot;) st.subheader(&quot;But, which movie reference is it?&quot;) st.text(&quot;Hello World&quot;) st.latex(r&#39;&#39;&#39; a + ar + a r^2 + a r^3 + cdots + a r^{n-1} = sum_{k=0}^{n-1} ar^k = a left( frac{1-r^{n}}{1-r} right) &#39;&#39;&#39;) . . Now with Data! . So, now we’re going to take a quick look at how to add charts. First we’re going to collect the iris dataset. If you have R or something like Tensorflow installed then you can import it from there. I’m going to collect it from someone random on the internet. You should probably download this dataset and store it somewhere; you’ll never get away from it. . import pandas as pd iris = pd.read_csv(&quot;https://datahub.io/machine-learning/iris/r/iris.csv&quot;) . Adding the chart is just as easy and you would expect: . st.line_chart(iris) . Not exactly what we’re looking but it’s kind of neat. This should serve as a reminder that when it comes to tools, it’s Garbage In, Garbage Out for what you feed it. Be careful what you’re doing because our tools wont know any better. .",
            "url": "https://orgulo.us/python/data%20vis/data%20visualization/sreamlit/2021/02/04/Introduction-To-Streamlit.html",
            "relUrl": "/python/data%20vis/data%20visualization/sreamlit/2021/02/04/Introduction-To-Streamlit.html",
            "date": " • Feb 4, 2021"
        }
        
    
  
    
        ,"post12": {
            "title": "Minimal Spark Cluster",
            "content": "Introduction . If you&#39;d like to setup Apache Spark to experiment with but you don&#39;t want to use a premade ISO or setup your own then I&#39;m going to show you how. This configuration will be a minimal one using Linux Operating Sytems; I&#39;m going to use Ubuntu so change the install based on your package mananger. I&#39;m going to assume that you&#39;ve setup the hosts, their networking and have some way to configure and deploy them. There are options like Puppet or Salt but I&#39;ll be avoiding those and leave them up to you. . Installation . I have script that does all of this but we&#39;re going to go over it so you understand each part and then I&#39;ll attach the bash script at the end. To start with, we&#39;re going to need Java since Spark is dependent on it. Login to each host - Master and Slaves - and you&#39;ll want to run: . apt update &amp;&amp; apt install openjdk-8-jre openjdk-8-jdk -y . Remember to adjust this for own Linux Distribution. . Figure out which directory you want to install Apache Spark into; Normally, you&#39;d use /opt so that&#39;s what we&#39;re going to be using. Download the archive of the files from the website: . wget -O /opt/spark-2.4.6-bin-hadoop2.7.tgz https://downloads.apache.org/spark/spark-2.4.6/spark-2.4.6-bin-hadoop2.7.tgz . If they obsolete the download link then you can find the versions online here. I&#39;m using the 3.0.1 version Pre-built for Apache Hadoop 2.7 for this but feel free to experiment. Once the file is downloaded, you&#39;ll want to unpack the archive: . tar -xzvf /opt/spark-2.4.6-bin-hadoop2.7.tgz -C /opt rm /opt/spark-2.4.6-bin-hadoop2.7.tgz . Now you&#39;ll have files ready for usage. Next you&#39;ll want to add the environmental variables so that linux will know where to look for the binary when you call it: . echo -e &quot; nexport SPARK_HOME=/opt/spark-2.4.6-bin-hadoop2.7 nexport PATH=/opt/spark-2.4.6-bin-hadoop2.7/bin:$PATH&quot; | tee -a ~/.bashrc export SPARK_HOME=/opt/spark-2.4.6-bin-hadoop2.7 export PATH=/opt/spark-2.4.6-bin-hadoop2.7/bin . Do this for all the hosts that you&#39;ll need to run Spark on. . Configuration Files . It is best to create a master copy of these next few configuratoin files to copy to each host in turn. This way you only need to edit each file ones and then copy them all the the appropriate hosts . For your master server, you&#39;ll need to update two files: spark-defaults.conf and spark-env.sh. Both of these should be found inside the conf directory of your spark home. Make sure you make a backup of them before you do anything else: . cp spark-defaults.conf spark-defaults.conf.bkp cp spark-env.sh spark-env.sh.bkp . Next you&#39;ll want to open them and add the master info information. For the defaults file simple uncomment and modify the line to look like: . spark.master spark://&lt;host or IP Addr&gt;:7077 . ... and the env file you&#39;ll want to look for the line: . SPARK_MASTER_HOST=&#39;&lt;host of IP Addr&gt;&#39; . You shouldn&#39;t need to change anything else in this file so long as you have full control of the systems you&#39;re using. In my case, I happen to not and changed where shuffle and worker logs are ran to avoid the operating system from filling up and crashing the host. If you need to worrry about those then update the lines SPARK_LOCAL_DIRS, SPARK_WORKER_DIR and SPARK_PID_DIR to point to somewhere else on the system which wont fill up the partition. . Next you&#39;ll want to collect the names or IP addresses of all the hosts in your cluster and add them to the slaves file in config directory just like were the others are. Make sure to test the connectivity of your hosts using ping or something else to confirm they can actually talk to one another! . Datastore . Now we&#39;re going to work around not having a Hadoop cluster. How this works, is that we&#39;re going to create a shared folder on all of the hosts which references the Master as the Source of Truth. First, create a folder in your spark home to hold the data: . mdkir $SPARK_HOME/Data . Go ahead and create a file in here for future usage: touch turtles . Next you&#39;ll go ahead and install a package called sshfs which is used to remotely mount a folder from one host and another: . sudo apt install sshfs . Repeat this for all the hosts in your cluster. Once that is done, you&#39;ll connect the slaves to the master using: . sshfs &lt;username&gt;@&lt;master-address&gt;:/opt/spark-2.4.6-bin-hadoop2.7/Data /opt/spark-2.4.6-bin-hadoop2.7/Data . Now you should be able to see the turtles file we created earlier if you list the files in the Data directory . ls Data . If you see the file then feel free to move on! If not, then double back and troubleshoot the connection between those two computers. Could also be permissions or something like that as well! . Connect the Dots, Start the Services . Now that we&#39;ve got it all connected together, go ahead and run the appropriate commands on the masters and servers to start them all up: . # master: $SPARK_HOME/sbin/start-master.sh # slaves: $SPARK_HOME/sbin/start-slave.sh spark://&lt;master-Addr&gt;:7077 . Success! . Now try and run it on the master: . username@HOST:~# $SPARK_HOME/bin/pyspark Python 2.7.12 (default, Apr 15 2020, 17:07:12) [GCC 5.4.0 20160609] on linux2 Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information. 20/10/13 05:19:50 WARN Utils: Your hostname, HOST.localdomain resolves to a loopback address: 127.0.0.1; using &lt;address&gt; instead (on interface eth0) 20/10/13 05:19:50 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address 20/10/13 05:19:50 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable Using Spark&#39;s default log4j profile: org/apache/spark/log4j-defaults.properties Setting default log level to &quot;WARN&quot;. To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). Welcome to ____ __ / __/__ ___ _____/ /__ _ / _ / _ `/ __/ &#39;_/ /__ / .__/ _,_/_/ /_/ _ version 2.4.6 /_/ Using Python version 2.7.12 (default, Apr 15 2020 17:07:12) SparkSession available as &#39;spark&#39;. &gt;&gt;&gt; . That should give you the above. . Now you can transfer data into that directory and read from it using the spark.read.* function that you need. Note that copying Big Data into that directory is not a good idea. If you&#39;re looking at TeraBytes or Petabytes worth of data then you&#39;ll definitely need a real Cluster. But, I&#39;ve already made some interesting observations in this limited environment. .",
            "url": "https://orgulo.us/python/data%20science/apache/spark/2021/01/18/Minimal-Spark-Cluster-Without-Hadoop.html",
            "relUrl": "/python/data%20science/apache/spark/2021/01/18/Minimal-Spark-Cluster-Without-Hadoop.html",
            "date": " • Jan 18, 2021"
        }
        
    
  
    
        ,"post13": {
            "title": "Challenges for 2021",
            "content": "Read 100 Books. . This is a challenge because I haven’t done it yet and fitting that many books into my life forces me to think about my spent time. With 52 weeks in the year, this means I will need to read 1.92 books per week. If I’m going to have a break day from everything - on Sundays - then that usually means reading about 100-134 pages of the current novel per day. Doing this along with being productive and pursuing larger goals gets it onto my list. . Create Three Potential Streams of Income. . I wont be discussing what those are but if modern society and the current state of affairs has taught me anything it’s to be proactive. You don’t want to be responding to a loss after it’s happened; you want to have responded before it has happened. Always have a plan B - and maybe a C. If you need your computer to work, then you’ll want a fallback that can throw in as a substitute. With working from home, the first thing I did was check to see if I can use my phone as a substitute for if my ISP decides to do “maintenance.” It works by the way. I wont hold myself to actually generating an income yet but that’s a stretch goal for the year. . New Job Title . I’m bored of being a Senior at this point and either need some larger technical challenges or just a swap in the set of responsibilities I deal with on a daily basis. There are some possibilities which I will try either to create or follow up on but I’m not staying where I am. . A Blog Post a Month. . I have this place where I can drop interesting project ideas or discuss problems that I’ve solved for myself to share with others. Since I don’t have a lack of problems to solve, then I should be writing about them for others to read and refer back to. Solving a problem a month is not the challenge but remembering to write about it is. . Draw An Original Comic. . If you’re following me on any social media then you’ve probably seen some crude drawings. While I admit I’m doing them for my own enjoyment - and challenge - I should push towards something tangible. . [A book you’ve been meaning to read.]: The Grammer of Science by Karl Pearson | [A book about a topic that fascinates.]: Unrestricted Warfare by Qiao Liang, Wang Xiangsui | [A book in the backlist of a favorite author.]: Legionaire by Jason Anspath, Nick Cole | [A book recommended by someone with great taste.]: Awake in the Nightland by John C. Wright | [Three books by the same author.]: Forgotten Ruin by Jason Anspath, Nick Cole | Hit And Fade by Jason Anspath, Nick Cole | Violence of Action by Jason Anspath, Nick Cole | . | [A book you chose for the cover.]: JinJang by Iris Paustian | [A book by an author who is new to you.]: The Forge of Christendom: The End of Days and the Epic Rise of the West by Tom Holland | [A book in translation.]: The Nine Chapters on the Mathematical Art: Companion and Commentary by Shen Kangshen | [A book outside your comfort zone.]: The Social Construction of Reality: A Treatise In the Sociology of Knowledge | [A book published before you were born]: The Constitution of the United States of America by The Found Fathers | .",
            "url": "https://orgulo.us/projects/challenges/2020/12/30/Challenges-For-2021.html",
            "relUrl": "/projects/challenges/2020/12/30/Challenges-For-2021.html",
            "date": " • Dec 30, 2020"
        }
        
    
  
    
        ,"post14": {
            "title": "Book Review: The Pulp Mindset; A Newpub Survival Mindset",
            "content": "This book is about something worth noticing as the access to writing and publishing has broadened. There are healthy and helpful tips for writing and about writing learned from reading the Pulps of the past - and as someone that hasn’t read much of them and slowly breaking that particular seal I cannot agree more. However, reading the book feels more like what my own essays in high school felt like with repetition spread around and re-wordings of the same ideas. . That isn’t to say don’t purchase or read it; I think you should just because there is some good history here. The author’s knowledge about such topics as the speech Mutation or Death was quite a surprise and the relationship between Old Pub and New Pub is a meaningful distinction that Cowan does well. Personally, I think he’s overselling it as there is enough poor writing on display via Amazon Unlimited or niches such as LitRPG where the divide between practiced writers or amateurs shows up from the first page. . All in all, spend the money but get it in digital. .",
            "url": "https://orgulo.us/books/review/writing/2020/10/28/The-Pulp-Mindset-Review.html",
            "relUrl": "/books/review/writing/2020/10/28/The-Pulp-Mindset-Review.html",
            "date": " • Oct 28, 2020"
        }
        
    
  
    
        ,"post15": {
            "title": "Simple Introduction to Python Debugging",
            "content": "Inspiration . While working on a script that I’m writing for work, I was having trouble really tracking down where my logic was failing. After looking over the code, everything looked correct but the results were showing me otherwise. So, I opened up python’s debugging system and started to dig in. . What is Debugging? . In computer programming and software development, debugging is the process of finding and resolving bugs (defects or problems that prevent correct operation) within computer programs, software, or systems. cf: https://en.wikipedia.org/wiki/Debugging . There are plenty of tools to do stuff like this but Python comes with its own: pdb — The Python Debugger. To activate it, you’d simply go into your terminal and type: . user@station# python3 -m pdb &lt;script-name&gt; . This with start the script from the top and immediately stop before running anything: . user@station:/scripts# python3 -m pdb keyIntegrityCheck.py &gt; /scripts/keyIntegrityCheck.py(5)&lt;module&gt;() -&gt; from pathlib import Path (Pdb) . While this is useful, we need to be able to explore the file. You could keep an editor open on a different monitor and move around but sometimes that’s not going to be an option. To print all the lines in the file you’d use: . (Pdb) ll 1 #!/usr/bin/env python3 2 ## Author: Collin Mitchell 3 ## Purpose: To check the integrity of keys without user input. 4 5 -&gt; from pathlib import Path 6 from itertools import filterfalse 7 import subprocess as sp 8 import json 9 import sys # ... 370 integrityFunc = dd.get(str(filename).split(&#39;.&#39;)[-1]) 371 if integrityFunc: 372 consistent = integrityFunc( filename ) 373 if not consistent: print(&quot;{} is not consistent.&quot;.format(filename)) 374 else: 375 print(&quot;{} is missing a checker; please report {} so it can be added.&quot;.format(filename,filename)) (Pdb) . You can see the pointer on line five telling us where the current execution point is. We can move the pointer a single line using n: . (Pdb) n [336/1995] &gt; /scripts/keyIntegrityCheck.py(6)&lt;module&gt;() -&gt; from itertools import filterfalse (Pdb) ll 1 #!/usr/bin/env python3 2 ## Author: Collin Mitchell 3 ## Purpose: To check the integrity of keys without user input. 4 5 from pathlib import Path 6 -&gt; from itertools import filterfalse 7 import subprocess as sp 8 import json 9 import sys . You can see the next 11 lines in the console buffer using l: . (Pdb) l 1 #!/usr/bin/env python3 2 ## Author: Collin Mitchell 3 ## Purpose: To check the integrity of keys without user input. 4 5 from pathlib import Path 6 -&gt; from itertools import filterfalse 7 import subprocess as sp 8 import json 9 import sys 10 11 # stuff to do with phpserialize: (Pdb) . Not that if you do this and run it again that you wont get the same result: . (Pdb) l 12 import codecs 13 try: 14 codecs.lookup_error(&#39;surrogateescape&#39;) 15 default_errors = &#39;surrogateescape&#39; 16 except LookupError: 17 default_errors = &#39;strict&#39; 18 try: 19 xrange 20 except NameError: 21 xrange = range 22 try: (Pdb) . … but you will get the next 11 lines instead. You can tell it which lines to list centered on a line number using l 10: . (Pdb) l 10 5 from pathlib import Path 6 -&gt; from itertools import filterfalse 7 import subprocess as sp 8 import json 9 import sys 10 11 # stuff to do with phpserialize: 12 import codecs 13 try: 14 codecs.lookup_error(&#39;surrogateescape&#39;) 15 default_errors = &#39;surrogateescape&#39; (Pdb) . Now that we can move around, let’s discuss how to actually stop code execution using breakpoints. These are locations you set - sometimes with conditions - to stop the code execution and explore the current state. You can set these using ‘b’: . (Pdb) b (Pdb) . Since we don’t have any breakpoints set, then it makes sense we don’t see any listed. So, now lets set one: . (Pdb) b 9 Breakpoint 1 at /scripts/keyIntegrityCheck.py:9 (Pdb) . … and continue execution until the breakpoint using c: . (Pdb) c &gt; /scripts/keyIntegrityCheck.py(9)&lt;module&gt;() -&gt; import sys (Pdb) . … and list the active breakpoints again: . (Pdb) b Num Type Disp Enb Where 1 breakpoint keep yes at /scripts/keyIntegrityCheck.py:9 breakpoint already hit 1 time (Pdb) . You can clear that breakpoint using the number of the breakpoint as well: . (Pdb) b Num Type Disp Enb Where 1 breakpoint keep yes at /scripts/keyIntegrityCheck.py:9 breakpoint already hit 1 time (Pdb) cl 1 Deleted breakpoint 1 at /scripts/keyIntegrityCheck.py:9 (Pdb) b (Pdb) . Conditional breakpoints I found a bit tricky to get to work correctly because you need to place a comma after the statement: . (Pdb) b 371, integrityFunc.__name__ == &#39;integrityPhp&#39; Breakpoint 3 at /scripts/keyIntegrityCheck.py:371 (Pdb) . … and then you c until it triggers: . &gt; /scripts/keyIntegrityCheck.py(371)&lt;module&gt;() -&gt; if integrityFunc: (Pdb) integrityFunc &lt;function integrityPhp at 0x7f99291477b8&gt; (Pdb) . Conclusion . I couldn’t find much outside of the official documentation when I needed it so hopefully you find the highlights useful. There are also tools for whichever IDE you’re using so look out for those as well. .",
            "url": "https://orgulo.us/python/programming/debugging/2020/10/21/Simple-Python-Debugging-Example.html",
            "relUrl": "/python/programming/debugging/2020/10/21/Simple-Python-Debugging-Example.html",
            "date": " • Oct 21, 2020"
        }
        
    
  
    
        ,"post16": {
            "title": "Game Review: Post Void",
            "content": "Post Void is a hypnotic scramble of early first-person shooter design that values speed above all else. Keep your head full and reach the end; Kill what you can to see it mend; Get the high score or try again. . About a month ago I Steam was kind enough to recommend a rough looking LSD-inspired shooter. And, this little gem is called Post Void created by a little Developer group called YCJY Games. Looking at the videos, screenshots and description I was immediately sold: . “Post Void is a hypnotic scramble of early first-person shooter design that values speed above all else. Keep your head full and reach the end; Kill what you can to see it mend; Get the high score or try again.” . . The game delivers on all of that with the classic Arcade Shooter style that I miss everytime I spin up any modern First Person Shooter and with a price tag of $2.99, there wasn’t any risk. . There is a tutorial level to get you acquainted with the basic ideas of the game - which is really just: You have a slide like many modern shooters. Your health is that glass tiki skull which drains away. Then you’re dropped right in and good luck. . The management of your health which forces you to press on creates a fun stresser which is simple but not overwhelming to manage: kill to fill. The enemy varieties are also limited for the 11 stages you race through - which isn’t all that many. It’s not a long game and wouldn’t actually mind seeing a Post Void 2 which pulls some elements from Rouge-likes and maybe a bit of coop shuffle. Also, the aim is a bit forgiving and there were moments where I was sure I would miss but still killed an enemy. . The art style is a bit rough on the eyes at first but actually is the right choice to make registering enemies and threats blend into the background just enough that you can miss or run right into them if you’re not careful. I’m also partial to colorful games so I admit this visually is my kind of game. . All in all, I’d recommend stuffing this game into downtime between lobbies and breaks between studying to stay alert. . Also, the Shotgun is best. Who knows why anyone wants to use the knife: weirdos. .",
            "url": "https://orgulo.us/game/review/lsd/arcade%20shooter/2020/09/30/Game-Review-Post-Void.html",
            "relUrl": "/game/review/lsd/arcade%20shooter/2020/09/30/Game-Review-Post-Void.html",
            "date": " • Sep 30, 2020"
        }
        
    
  
    
        ,"post17": {
            "title": "Game Review: Empyrion - Galactic Survival",
            "content": "If you’re looking for a TL:DR: game is fun but has some challenges. . The first time I opened the map to see all the different systems we could visit I was basically sold on the game. The first time we made our system hop, we almost got trapped in hellscape and had a blast trying to get off that planet. . Empyrion - Galactic Survival is - well - a Survival Game that adds the idea of different planets and systems to explore instead of simply other towns or woods or whatever that splotch over that hill is. What’s nice about it was as you explore the menus, it gives you something to plan for while trying to build up some semblance of safety where you are. As you scroll out, there are hundreds of systems to explore with their own rings of planets and moons and asteroid fields - which really is the allure of this game. I want to float around the Galaxy and do stupid things. . Out of the gate, there are lots of geometries to play with when building bases or anything else which is a nice change from other Survival games where you’re kind of stuck with a few pre-defined structures. Sadly, the internal structure of the actual block shape wont impact where you can actually place anything since you’re still locked into a cubic construction system. This does make a good number of the more interesting shapes rather impractical to try and use on anything you build. . The plethora of pieces to care about makes navigating and management challenging. Finding out just how to build your first actual base was annoying until you realize that you need a core or a starter block to build off anything. Different blocks are tied to different kinds of structures which are denoted by the initials HV,CV,SV,BA which are just not explained. You’re going to be reading the descriptions of the stuff you build; you’re going to have to just about all the time because you’re going to miss important details. My mistake was not realizing that shields will require a Pentaxid to fuel them and there is no warning about this until the shields don’t work - except the last line in the text. A better idea maybe would have been that you don’t have any shields until you’ve actually fed your Vessel Pentaxid and therefore you’ll be forced to realize this. There is a good amount of finding out the hard way. . Likewise, there are lots of small stats and management that goes into a base which make sense but just don’t feel intuitive at all. I know that I need power and to do that I need something which makes power but I don’t know anything about Solar Panel rates from looking at the device before construction; there is no real way to optimize buildings or make decisions about if I want something until I’ve made it and realized that I either don’t need it yet or it’s missing necessary components. The Solar Panels need a Capacitor else they’re really not much use once the sun is down - and the base doesn’t store anything. Explore the Control Panel as soon as you can. . Contrary to some complaints, the combat isn’t bad for a Survival game and fights in space have been pretty fun. Having my friend float around in a tuned Small Vessel hecking out resources in Zirax controlled space to avoid pulling us into a space fight with our starter Capital Vessel only to be discovered by a wandering drone led to quite the episode of us coordinating his docking while everything in the system came to murder us escaping with a queue’d up lock to a different system for just such an emergency is why this game has been fun. The complaints about being outgunned are certainly true though. The Defense Station that sits just outside the atmosphere is a space graveyard of failed attempts to kick it out of the orbit. After building a prototype to try and kill the thing, I point-blanked it with 6 pulse Lasers 49 times before it finally blew apart my small vessel and I lost. The AI for the enemies in the game is certainly questionable too. I’ve watched as three factions of different types mingle with one another as if they’re not even aware of each other until I am taking shots at them and then they’re all after me like there is some pact to murder non-NPCs in the Galaxy on sight. . All in all, I’m not regretting buying it and it’s probably my favorite current Survival game. I think that the criticisms are pretty fair though; the game is very ambitious and they haven’t delivered yet but the platform is there so long as they’re continuing to diligently add the pieces patch by patch I’ll keep playing it. Complicated but promising. .",
            "url": "https://orgulo.us/games/review/scifi/survival/2020/09/18/Game-Review-Empyrion-Galactic-Survival.html",
            "relUrl": "/games/review/scifi/survival/2020/09/18/Game-Review-Empyrion-Galactic-Survival.html",
            "date": " • Sep 18, 2020"
        }
        
    
  
    
        ,"post18": {
            "title": "Fastbooks Incidentally Supports R",
            "content": "Pleasant Surprise . While trying to test the boundaries of what fastpages actually supports, I figured I&#39;d try out installing and setting up an R Notebook as well. Luckily enough, it does indeed support compiling and building R kernels as well. . The first step will be to install an R kernel for the notebook which can be done using: . conda install -c r r-essentials . This can be ran either from inside a notebook by prepending a ! in a cell such as !conda install -c r r-essentials or simply run it at the console if you&#39;re in linux and in the project directory. . This is mostly an exibition post about how this can be done so we&#39;re just going to show off some R stuff. . # I miss this selecting over Python&#39;s Pandas: mtcars[order(mtcars$gear, mtcars$mpg), ] . mpgcyldisphpdratwtqsecvsamgearcarb . Cadillac Fleetwood10.4 | 8 | 472.0 | 205 | 2.93 | 5.250 | 17.98 | 0 | 0 | 3 | 4 | . Lincoln Continental10.4 | 8 | 460.0 | 215 | 3.00 | 5.424 | 17.82 | 0 | 0 | 3 | 4 | . Camaro Z2813.3 | 8 | 350.0 | 245 | 3.73 | 3.840 | 15.41 | 0 | 0 | 3 | 4 | . Duster 36014.3 | 8 | 360.0 | 245 | 3.21 | 3.570 | 15.84 | 0 | 0 | 3 | 4 | . Chrysler Imperial14.7 | 8 | 440.0 | 230 | 3.23 | 5.345 | 17.42 | 0 | 0 | 3 | 4 | . Merc 450SLC15.2 | 8 | 275.8 | 180 | 3.07 | 3.780 | 18.00 | 0 | 0 | 3 | 3 | . AMC Javelin15.2 | 8 | 304.0 | 150 | 3.15 | 3.435 | 17.30 | 0 | 0 | 3 | 2 | . Dodge Challenger15.5 | 8 | 318.0 | 150 | 2.76 | 3.520 | 16.87 | 0 | 0 | 3 | 2 | . Merc 450SE16.4 | 8 | 275.8 | 180 | 3.07 | 4.070 | 17.40 | 0 | 0 | 3 | 3 | . Merc 450SL17.3 | 8 | 275.8 | 180 | 3.07 | 3.730 | 17.60 | 0 | 0 | 3 | 3 | . Valiant18.1 | 6 | 225.0 | 105 | 2.76 | 3.460 | 20.22 | 1 | 0 | 3 | 1 | . Hornet Sportabout18.7 | 8 | 360.0 | 175 | 3.15 | 3.440 | 17.02 | 0 | 0 | 3 | 2 | . Pontiac Firebird19.2 | 8 | 400.0 | 175 | 3.08 | 3.845 | 17.05 | 0 | 0 | 3 | 2 | . Hornet 4 Drive21.4 | 6 | 258.0 | 110 | 3.08 | 3.215 | 19.44 | 1 | 0 | 3 | 1 | . Toyota Corona21.5 | 4 | 120.1 | 97 | 3.70 | 2.465 | 20.01 | 1 | 0 | 3 | 1 | . Merc 280C17.8 | 6 | 167.6 | 123 | 3.92 | 3.440 | 18.90 | 1 | 0 | 4 | 4 | . Merc 28019.2 | 6 | 167.6 | 123 | 3.92 | 3.440 | 18.30 | 1 | 0 | 4 | 4 | . Mazda RX421.0 | 6 | 160.0 | 110 | 3.90 | 2.620 | 16.46 | 0 | 1 | 4 | 4 | . Mazda RX4 Wag21.0 | 6 | 160.0 | 110 | 3.90 | 2.875 | 17.02 | 0 | 1 | 4 | 4 | . Volvo 142E21.4 | 4 | 121.0 | 109 | 4.11 | 2.780 | 18.60 | 1 | 1 | 4 | 2 | . Datsun 71022.8 | 4 | 108.0 | 93 | 3.85 | 2.320 | 18.61 | 1 | 1 | 4 | 1 | . Merc 23022.8 | 4 | 140.8 | 95 | 3.92 | 3.150 | 22.90 | 1 | 0 | 4 | 2 | . Merc 240D24.4 | 4 | 146.7 | 62 | 3.69 | 3.190 | 20.00 | 1 | 0 | 4 | 2 | . Fiat X1-927.3 | 4 | 79.0 | 66 | 4.08 | 1.935 | 18.90 | 1 | 1 | 4 | 1 | . Honda Civic30.4 | 4 | 75.7 | 52 | 4.93 | 1.615 | 18.52 | 1 | 1 | 4 | 2 | . Fiat 12832.4 | 4 | 78.7 | 66 | 4.08 | 2.200 | 19.47 | 1 | 1 | 4 | 1 | . Toyota Corolla33.9 | 4 | 71.1 | 65 | 4.22 | 1.835 | 19.90 | 1 | 1 | 4 | 1 | . Maserati Bora15.0 | 8 | 301.0 | 335 | 3.54 | 3.570 | 14.60 | 0 | 1 | 5 | 8 | . Ford Pantera L15.8 | 8 | 351.0 | 264 | 4.22 | 3.170 | 14.50 | 0 | 1 | 5 | 4 | . Ferrari Dino19.7 | 6 | 145.0 | 175 | 3.62 | 2.770 | 15.50 | 0 | 1 | 5 | 6 | . Porsche 914-226.0 | 4 | 120.3 | 91 | 4.43 | 2.140 | 16.70 | 0 | 1 | 5 | 2 | . Lotus Europa30.4 | 4 | 95.1 | 113 | 3.77 | 1.513 | 16.90 | 1 | 1 | 5 | 2 | . mtcars[order(mtcars$gear, mtcars$mpg), ] %&gt;% ggplot(aes(disp, hp, colour = cyl)) + geom_point() . crimes &lt;- data.frame(state = tolower(rownames(USArrests)), USArrests) # Equivalent to crimes %&gt;% tidyr::pivot_longer(Murder:Rape) vars &lt;- lapply(names(crimes)[-1], function(j) { data.frame(state = crimes$state, variable = j, value = crimes[[j]]) }) crimes_long &lt;- do.call(&quot;rbind&quot;, vars) states_map &lt;- map_data(&quot;state&quot;) ggplot(crimes_long, aes(map_id = state)) + geom_map(aes(fill = value), map = states_map) + expand_limits(x = states_map$long, y = states_map$lat) + facet_wrap( ~ variable) . I did also try to use ggvis as well but it just wont display properly so that&#39;s unfortunately out. .",
            "url": "https://orgulo.us/r/jupyter/ggplot/2020/09/09/Fastbooks-Incidentally-Supports-R.html",
            "relUrl": "/r/jupyter/ggplot/2020/09/09/Fastbooks-Incidentally-Supports-R.html",
            "date": " • Sep 9, 2020"
        }
        
    
  
    
        ,"post19": {
            "title": "A Post Exploring Altair",
            "content": "This Is The Tool We Have . I&#39;m trying out the fastpages in hopes that I wont have to spend the time building out my own website toolset. I&#39;ve been slowly building something out of Wagtail which is a really just Djnago with some bells. The real allure though is going to be the Notebook conversions - specifically the Data Visualizations. The library for interactive version is Altair and we&#39;re going to explore some data! . Lets Explore! . So, the tutorial for Scatter Plot uses the car data but I figured we mind as well do the classic Iris dataset. We&#39;ll start by importing the dataset from vega_datasets - which is the Javascript library that Altair is built on top of - using iris = data.iris(). . iris = data.iris() iris . sepalLength sepalWidth petalLength petalWidth species . 0 5.1 | 3.5 | 1.4 | 0.2 | setosa | . 1 4.9 | 3.0 | 1.4 | 0.2 | setosa | . 2 4.7 | 3.2 | 1.3 | 0.2 | setosa | . 3 4.6 | 3.1 | 1.5 | 0.2 | setosa | . 4 5.0 | 3.6 | 1.4 | 0.2 | setosa | . ... ... | ... | ... | ... | ... | . 145 6.7 | 3.0 | 5.2 | 2.3 | virginica | . 146 6.3 | 2.5 | 5.0 | 1.9 | virginica | . 147 6.5 | 3.0 | 5.2 | 2.0 | virginica | . 148 6.2 | 3.4 | 5.4 | 2.3 | virginica | . 149 5.9 | 3.0 | 5.1 | 1.8 | virginica | . 150 rows × 5 columns . First lets see the graph - and then we&#39;ll discuss the functions . alt .Chart(iris) .mark_point() .encode( x=&#39;sepalLength&#39;, y=&#39;sepalWidth&#39;, color=&#39;species&#39;, tooltip = [&#39;species&#39;, &#39;petalLength&#39;, &#39;petalWidth&#39;] ) .interactive() . It is interesting to note that - per the Docs - : . Create a basic Altair/Vega-Lite chart. . Although it is possible to set all Chart properties as constructor attributes, it is more idiomatic to use methods such as mark_point(), encode(), transform_filter(), properties(), etc. . .. which means that it&#39;s found a way to do something similar to the R Programming Languages pipe operator. For reference, it would looks something like this:mtcars %&gt;% ggplot(aes(wt, mpg)) + geom_point(aes(colour = factor(cyl))) . . First we tell altair to make a chart using the dataset we&#39;re using: . .Chart(iris) . ... which is then followed by the kind of graph that we&#39;re after - in this case we&#39;re after a scatter plot: . .mark_point() . ... and then we tell it where everything belongs. . .encode( x=&#39;sepalLength&#39;, y=&#39;sepalWidth&#39;, color=&#39;species&#39;, tooltip = [&#39;species&#39;, &#39;petalLength&#39;, &#39;petalWidth&#39;] ) . Of interest is that you can add data from the other columns easily using the tooltip without having to add anything extra. Layering information which is relevant but lacks a meaningful graphic representation was a nice touch. . Then of course, you allow users to interact with it via: . .interactive() . Lets see what this post looks like on the blog! .",
            "url": "https://orgulo.us/altair/jupyter/python/2020/09/06/exploring-altair-visualization.html",
            "relUrl": "/altair/jupyter/python/2020/09/06/exploring-altair-visualization.html",
            "date": " • Sep 6, 2020"
        }
        
    
  
    
        ,"post20": {
            "title": "Book Review: Voices of the Void",
            "content": "The Voices of the Void by David Stewart is a pleasant short story that mixes a Science Fiction backdrop with some supernatural horror. We join the introduced protagonist - Andrew Dalatent - entering a mining colony called New Gibralter where he appears tasked with figuring out what happened to the people there. And, I say it appears because as he starts his descent you find out he’s more aware of the whys and whats of the situation than is initially let on. . Coupled with his own supernatural ability to observe future and past versions of events around him, we get to join him as he tries to survive against humanity removed of its own free will. These sections that Stewart uses were my own personal favorite because they’re surprisingly easy to follow but also because they grow slowly out of being just a novel tactic Andrew uses to protect himself into an important aspect of the later story. . Short read but enjoyable. .",
            "url": "https://orgulo.us/books/review/scifi/2020/07/09/Voices-of-the-Void.html",
            "relUrl": "/books/review/scifi/2020/07/09/Voices-of-the-Void.html",
            "date": " • Jul 9, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Reading Challenge",
          "content": "Book Recommendations: . These recommendations are not about the best prose nor about the most interesting story; they’re about books to build a foundation on which will help you stabalize your life to get where you would like to go in some form of comfort. . How to Read a Book: The Classic Guide to Intelligent Reading How to Read a Book, originally published in 1940, has become a rare phenomenon, a living classic. It is the best and most successful guide to reading comprehension for the general reader. And now it has been completely rewritten and updated. . | The Elements of Style by William Strunk Jr. and E.B. White This is The Elements of Style, the classic style manual, now in a fourth edition. A new Foreword by Roger Angell reminds readers that the advice of Strunk &amp; White is as valuable today as when it was first offered. This book’s unique tone, wit and charm have conveyed the principles of English style to millions of readers. Use the fourth edition of “the little book” to make a big impact with writing. . | The Keys to Prolific Creativity by David V. Stewart Designed for all artists, writers, and musicians, The Keys to Prolific Creativity is a no-fluff guide to organizing your priorities, managing your growth, and designing a creative process that will help you achieve the creative output you have always desired. . | A Random Walk Down Wall Street by Burton G. Malkiel Especially in the wake of the financial meltdown, readers will hunger for Burton G. Malkiel’s reassuring, authoritative, gimmick-free, and perennially best-selling guide to investing. With 1.5 million copies sold, A Random Walk Down Wall Street has long been established as the first book to purchase when starting a portfolio. . | Profit First: Transform Your Business from a Cash-Eating Monster to a Money-Making Machine by Mike Michalowicz Conventional accounting uses the logical (albeit, flawed) formula: Sales - Expenses = Profit. The problem is, businesses are run by humans, and humans aren’t always logical. Serial entrepreneur Mike Michalowicz has developed a behavioral approach to accounting to flip the formula: Sales - Profit = Expenses. Just as the most effective weight loss strategy is to limit portions by using smaller plates, Michalowicz shows that by taking profit first and apportioning only what remains for expenses, entrepreneurs will transform their businesses from cash-eating monsters to profitable cash cows. Using Michalowicz’s Profit First system . |",
          "url": "https://orgulo.us/Readings/",
          "relUrl": "/Readings/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://orgulo.us/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}